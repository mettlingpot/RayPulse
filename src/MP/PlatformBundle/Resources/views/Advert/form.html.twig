
<div class="well">
  {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

  {{ form_errors(form) }}



  <div class="form-group">
    {{ form_label(form.title, "Titre de l'événement", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

    {{ form_errors(form.title) }}

    <div class="col-sm-10">
      {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>

  <div class="form-group">
    {{ form_label(form.content, "Contenu de l'événement", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
    {{ form_errors(form.content) }}
    <div class="col-sm-10">
      {{ form_widget(form.content, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>

  <div class="form-group">
          {{ form_label(form.datedebut, "Date de debut", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
      <div class="col-sm-10">
          {{ form_widget(form.datedebut) }}
      </div>
  </div>

  <div class="form-group">
        {{ form_label(form.datefin, "Date de fin", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
    <div class="col-sm-10">
        {{ form_widget(form.datefin) }}
    </div>
  </div>

  <div class='form-group'>
        {{ form_label(form.adresse.adresse, "Adresse", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
      <div class="col-sm-10">
              {{ form_widget(form.adresse.adresse, {'attr':{'class':'form-control','onFocus':'geolocate()'}}) }}
      </div>
  </div>
  <div class='form-group'>
        {{ form_label(form.author, "Auteur", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
      <div class="col-sm-10">
      {{ form_widget(form.author, {'attr': {'class': 'form-control'}}) }}
      </div>
  </div>
    <div class='form-group'>
        {{ form_label(form.site, "Site", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
      <div class="col-sm-10">
      {{ form_widget(form.site, {'attr': {'class': 'form-control'}}) }}
      </div>
  </div>
  <div class='form-group'>
        {{ form_label(form.prix, "Prix", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
      <div class="col-sm-10">
      {{ form_widget(form.prix, {'attr': {'class': 'form-control'}}) }}
      </div>
  </div>
  <div class='form-group'>
        {{ form_label(form.image, "image", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
      <div class="col-sm-10">
      {{ form_widget(form.image.file) }}
      </div>
  </div>
  <div class='form-group'>
        {{ form_label(form.categories, "categorie", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
      <div class="col-sm-10">
      {{ form_widget(form.categories) }}
      </div>
  </div>


  {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}
</div>
  {#{{ form(form) }}#}
    <table id="address">
      <tr>
        <td class="label">{{ form_rest(form) }}</td>
        <td class="slimField"><input class="field" id="street_number"
              disabled="true"></input></td>
        <td class="wideField" colspan="2"><input class="field" id="route"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">City</td>
        <!-- Note: Selection of address components in this example is typical.
             You may need to adjust it for the locations relevant to your app. See
             https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete-addressform
        -->
        <td class="wideField" colspan="3"><input class="field" id="locality"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">State</td>
        <td class="slimField"><input class="field"
              id="administrative_area_level_1" disabled="true"></input></td>
        <td class="label">Zip code</td>
        <td class="wideField"><input class="field" id="postal_code"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">Country</td>
        <td class="wideField" colspan="3"><input class="field"
              id="country" disabled="true"></input></td>
      </tr>
            <tr>
        <td class="label">Lat</td>
        <td class="wideField" colspan="3"><input class="field"
              id="lat" disabled="true"></input></td>
      </tr>
                  <tr>
        <td class="label">Long</td>
        <td class="wideField" colspan="3"><input class="field"
              id="lng" disabled="true"></input></td>
      </tr>
    </table>
  <script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };
        var componentFormId = {
        street_number: 'mp_platformbundle_advert_adresse_numero',
        route: 'mp_platformbundle_advert_adresse_rue',
        locality: 'mp_platformbundle_advert_adresse_ville',
        administrative_area_level_1: 'mp_platformbundle_advert_adresse_departement',
        country: 'mp_platformbundle_advert_adresse_pays',
        postal_code: 'mp_platformbundle_advert_adresse_code'
      };


      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('mp_platformbundle_advert_adresse_adresse')),
            {types: ['geocode']});
        autocomplete.setComponentRestrictions(
            {'country': ['fr']});
        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();
        var lat = place.geometry.location.lat(),
            lng = place.geometry.location.lng();
        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;

        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];

          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(componentFormId[addressType]).value = val;
                      console.log(componentFormId[addressType]);
                      console.log(place.address_components[i].types[0]);
                      console.log(val);
          }
        }
            document.getElementById('mp_platformbundle_advert_adresse_lat').value = lat;
            document.getElementById('mp_platformbundle_advert_adresse_lng').value = lng;

      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>

<style>
      #address {
        display:none;
      }

    </style>


